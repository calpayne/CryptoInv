@model CryptoInv.Models.Investments.InvestmentDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<div class="heading single">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h3>Details of Investment [@Model.Amount @Model.CoinId bought at £@Model.Cost]</h3>
            </div>
        </div>
    </div>
</div>
<div class="content-small grey content-with-chart">
    <div class="container">
        <div class="row text-center">
            <div class="col-md-4">
                <div class="coin">
                    <h3><i class="cc @Model.Coin.Id"></i> @Model.Coin.Name <small>(@Model.Coin.Id)</small></h3>
                    <h4>@Model.PricePerCoinNow <small class="@(double.Parse(Model.PriceChange24Hours) < 0 ? "text-danger" : "text-success")">(@Model.PriceChange24Hours%)</small></h4>
                </div>
            </div>
            <div class="col-md-2">
                <h4 class="mt-2">@Html.DisplayFor(model => model.Hour24High)<br /><small>@Html.DisplayNameFor(model => model.Hour24High)</small></h4>
            </div>
            <div class="col-md-2">
                <h4 class="mt-2">@Html.DisplayFor(model => model.Hour24Low)<br /><small>@Html.DisplayNameFor(model => model.Hour24Low)</small></h4>
            </div>
            <div class="col-md-2">
                <h4 class="mt-2">@Html.DisplayFor(model => model.Volume24)<br /><small>@Html.DisplayNameFor(model => model.Volume24)</small></h4>
            </div>
            <div class="col-md-2">
                <h4 class="mt-2">@Html.DisplayFor(model => model.MarketCap)<br /><small>@Html.DisplayNameFor(model => model.MarketCap)</small></h4>
            </div>
        </div>
        <hr />
    </div>
    <div style="width: 100%">
        <canvas id="chart-area"></canvas>
    </div>
</div>
<div class="content">
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <table class="table table-striped investment-details">
                    <thead>
                        <tr class="success">
                            <th colspan="2">Basic Info</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.Coin)</td>
                            <td>@Html.DisplayFor(model => model.Coin.Name) (@Html.DisplayFor(model => model.Coin.Id))</td>
                        </tr>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.Amount)</td>
                            <td>@Html.DisplayFor(model => model.Amount)</td>
                        </tr>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.PricePerCoin)</td>
                            <td>&pound;@Html.DisplayFor(model => model.PricePerCoin)</td>
                        </tr>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.PricePerCoinNow)</td>
                            <td>@Html.DisplayFor(model => model.PricePerCoinNow)</td>
                        </tr>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.Cost)</td>
                            <td>&pound;@Html.DisplayFor(model => model.Cost)</td>
                        </tr>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.CostNowFormatted)</td>
                            <td>&pound;@Html.DisplayFor(model => model.CostNowFormatted)</td>
                        </tr>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.InvestmentDate)</td>
                            <td>@Html.DisplayFor(model => model.InvestmentDate)</td>
                        </tr>
                    </tbody>
                </table>
                <div>
                    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
                    <a asp-action="Index">Back to List</a>
                </div>
            </div>
            <div class="col-md-4">
                <table class="table table-striped investment-details">
                    <thead>
                        <tr class="success">
                            <th colspan="2">Profit Info</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.Profit)</td>
                            <td>£@Html.DisplayFor(model => model.Profit)</td>
                        </tr>
                        <tr>
                            <td scope="row">Profit @Html.DisplayNameFor(model => model.PriceChange24Hours)</td>
                            <td>@Html.DisplayFor(model => model.PriceChange24Hours)%</td>
                        </tr>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.Profit24High)</td>
                            <td>£@Html.DisplayFor(model => model.Profit24High)</td>
                        </tr>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.Profit24Low)</td>
                            <td>£@Html.DisplayFor(model => model.Profit24Low)</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-md-4">
                <table class="table table-striped investment-details">
                    <thead>
                        <tr class="success">
                            <th colspan="2">Coin Info</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.Coin)</td>
                            <td>@Html.DisplayFor(model => model.Coin.Name) (@Html.DisplayFor(model => model.Coin.Id))</td>
                        </tr>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.PricePerCoinNow)</td>
                            <td>@Html.DisplayFor(model => model.PricePerCoinNow)</td>
                        </tr>
                        <tr>
                            <td scope="row">Coin Price @Html.DisplayNameFor(model => model.Hour24High)</td>
                            <td>@Html.DisplayFor(model => model.Hour24High)</td>
                        </tr>
                        <tr>
                            <td scope="row">Coin Price @Html.DisplayNameFor(model => model.Hour24Low)</td>
                            <td>@Html.DisplayFor(model => model.Hour24Low)</td>
                        </tr>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.Volume24)</td>
                            <td>@Html.DisplayFor(model => model.Volume24)</td>
                        </tr>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.Supply)</td>
                            <td>@Html.DisplayFor(model => model.Supply)</td>
                        </tr>
                        <tr>
                            <td scope="row">@Html.DisplayNameFor(model => model.MarketCap)</td>
                            <td>@Html.DisplayFor(model => model.MarketCap)</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        window.chartColors = {
            red: 'rgb(255, 99, 132)',
            orange: 'rgb(255, 159, 64)',
            yellow: 'rgb(255, 205, 86)',
            green: 'rgb(75, 192, 192)',
            blue: 'rgb(54, 162, 235)',
            purple: 'rgb(153, 102, 255)',
            grey: 'rgb(231,233,237)'
        };

        var config = {
            type: 'line',
            data: {
                datasets: [{
                    data: [@string.Join(",", Model.ChartDataValue)],
                    backgroundColor: [
                        window.chartColors.green,
                    ],
                }],
                labels: ["@Html.Raw(string.Join("\",\"", Model.ChartDataDate))"]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                legend: {
                    display: false
                },
                tooltips: {
                    enabled: true
                },
                scales: {
                    xAxes: [{
                        display: false
                    }],
                    yAxes: [{
                        display: false
                    }]
                },
            }
        };

        window.onload = function () {
            var ctx = document.getElementById("chart-area").getContext("2d");
            window.myPie = new Chart(ctx, config);
        };
    </script>
}